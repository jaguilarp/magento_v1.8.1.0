<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     default_iphone
 * @copyright   Copyright (c) 2010 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php
/**
 * Top menu for store
 *
 * @see Mage_Catalog_Block_Navigation
 */
?>
<script src="<?php echo $this->getSkinUrl('js/jquery.js') ?>" type="text/javascript"></script>
<script src="<?php echo $this->getSkinUrl('js/hello.js') ?>" type="text/javascript"></script>
<script src="<?php echo $this->getSkinUrl('js/custom.js') ?>" type="text/javascript"></script>
<link rel="stylesheet" type="text/css" href="<?php echo $this->getSkinUrl('css/menu.css') ?>" />
<div class="header-nav-container">
    <div class="header-nav">
		<div class="left-nav">
			<?php // if (count($this->getStoreCategories()) > 0): ?>
				<div id="left-nav">
				<?php foreach ($this->getStoreCategories() as $_category): ?>
					<?php echo renderCategoryMenuItemHtml($this,$_category) ?>
				<?php endforeach ?>
				</div>
			<?php // endif; ?>
		</div>	
    </div>
</div>

<?php
    function renderCategoryMenuItemHtml($block,$category, $level = 0, $isLast = false, $isFirst = false,
        $isOutermost = false, $outermostItemClass = '', $childrenWrapClass = '', $noEventAttributes = false)
    {
        if (!$category->getIsActive()) {
            return '';
        }
        $html = array();

        // get all children
        if (Mage::helper('catalog/category_flat')->isEnabled()) {
            $children = (array)$category->getChildrenNodes();
            $childrenCount = count($children);
        } else {
            $children = $category->getChildren();
            $childrenCount = $children->count();
        }
        $hasChildren = ($children && $childrenCount);

        // select active children
        $activeChildren = array();
        foreach ($children as $child) {
            if ($child->getIsActive()) {
                $activeChildren[] = $child;
            }
        }
        $activeChildrenCount = count($activeChildren);
        $hasActiveChildren = ($activeChildrenCount > 0);

        // prepare list item html classes
        $classes = array();
		$classes[] = 'category';
		if($level == 0){
			$classes[] = 'head';
		}
        $linkClass = '';
        if ($isOutermost && $outermostItemClass) {
            $classes[] = $outermostItemClass;
            $linkClass = ' class="'.$outermostItemClass.'"';
        }
        if ($block->isCategoryActive($category)) {
            $classes[] = 'active';
        }
        if ($isFirst) {
            $classes[] = 'first';
        }
        if ($isLast) {
            $classes[] = 'last';
        }

        // prepare list item attributes
        $attributes = array();
        if (count($classes) > 0) {
            $attributes['class'] = implode(' ', $classes);
			$attributes['lang'] = $category->getId();
        }

        // assemble list item with attributes
        $htmlLi = '<li';
        foreach ($attributes as $attrName => $attrValue) {
            $htmlLi .= ' ' . $attrName . '="' . str_replace('"', '\"', $attrValue) . '"';
        }
        $htmlLi .= '>';
        $html[] = $htmlLi;
		if($level == 0){
			$html[] = '<a href="javascript://"'.$linkClass.'>';
			$html[] = '<span>' . $block->escapeHtml($category->getName()) . '</span>';
			$html[] = '</a>';
		}
		elseif($hasActiveChildren){
			$html[] = '<a href="javascript://"'.$linkClass.'>';
			$html[] = $block->escapeHtml($category->getName());
			$html[] = '</a>';
			$html[] = '<a href="'.$block->getCategoryUrl($category).'" class="empty">';
			$html[] = '</a>';
		}
		else{
			$html[] = '<a href="'.$block->getCategoryUrl($category).'"'.$linkClass.'>';
			$html[] = $block->escapeHtml($category->getName());
			$html[] = '</a>';
		}
		$html[] = '</li>';
        // render children
        $htmlChildren = '';
        $j = 0;
        foreach ($activeChildren as $child) {
            $htmlChildren .= renderCategoryMenuItemHtml(
				$block,
                $child,
                ($level + 1),
                ($j == $activeChildrenCount - 1),
                ($j == 0),
                false,
                $outermostItemClass,
                $childrenWrapClass,
                $noEventAttributes
            );
            $j++;
        }
        if (!empty($htmlChildren)) {
            if ($childrenWrapClass) {
                $html[] = '<div class="' . $childrenWrapClass . '">';
            }
			if($level == 0){
				$html[] = '<li>';
				$html[] = '<ul class="subcategory_' . $category->getId() . '" style="display:none;">';
				$html[] = $htmlChildren;
				$html[] = '</ul>';
				$html[] = '</li>';
			}
			else{
				$html[] = '<ul class="subcategory_' . $category->getId() . '" style="display:none;">';
				$html[] = $htmlChildren;
				$html[] = '</ul>';
			}
            if ($childrenWrapClass) {
                $html[] = '</div>';
            }
        }

        $html = implode("\n", $html);
        return $html;
    }
?>